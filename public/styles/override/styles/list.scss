@use "sass:map";
@use "../variables/index.scss" as setting;

.e-list {
  --root-indent: #{setting.$space-base};
  --list-item-prepend-width: calc(#{setting.$space-base} + #{setting.$list-prepend-width});
  --padding-inline: #{setting.$space-base};

  &-item {
    padding-inline: calc(var(--padding-inline, #{setting.$space-base}) + var(--group-inline-padding, 0px));

    &__prepend {
      width: var(--list-item-prepend-width, calc(#{setting.$space-base} + #{setting.$list-prepend-width}));
    }

    @each $key, $value in setting.$list-item-font-sizes {
      &--size-#{$key} {
        --list-item-font-size: #{$value};
        --list-item-height: #{map.get(setting.$list-item-height, $key)};
        --icon-font-size: #{map.get(setting.$icon-font-sizes, $key)};
      }
    }
  }

  &-group {
    &__content {
      --group-inline-padding:#{setting.$space-base};
    }

    &:not(:last-child):not(:only-child) {
      margin-bottom: #{setting.$space-step};
    }
  }

  &-group:has(> .e-list-item > .e-list-item__prepend) {
    .e-list-group__content {
      --padding-inline: calc(var(--list-item-prepend-width) + var(--root-indent));
    }
  }

  &:has(> .e-list-item > .e-list-item__prepend) {
    >.e-list-group:not(:has(> .e-list-item > .e-list-item__prepend)) {
      --padding-inline: calc(var(--root-indent) + var(--list-item-prepend-width));
    }

    >.e-list-item:not(:has(> .e-list-item__prepend)) {
      --padding-inline: calc(var(--root-indent) + var(--list-item-prepend-width));
    }
  }
}

.e-drawer {
  .e-list {
    padding-inline: calc(#{setting.$space-step} * 2);

    &-item {
      border-radius: #{setting.$border-radius-root};

      &:not(:only-child):not(:last-child) {
        margin-bottom: #{setting.$space-step};
      }
    }
  }
}